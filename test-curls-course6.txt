# Course 6: Advanced Filtering, Aggregation, and Sorting â€” Test CURLs

# 0) Public: basic reads
curl -s http://localhost:3000/books
curl -s http://localhost:3000/users

# 1) Admin login (seed: admin/admin)
ADMIN_TOKEN=$(curl -s -X POST http://localhost:3000/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"username":"admin","password":"admin"}' | sed -E 's/.*"access_token":"?([^",}]+).*/\1/')
echo "ADMIN_TOKEN: ${ADMIN_TOKEN}"

# 2) Admin creates enriched books with metadata
curl -s -X POST http://localhost:3000/books \
  -H "Authorization: Bearer ${ADMIN_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d '{"title":"Clean Code","author":"Robert C. Martin","totalPages":464,"publishDate":"2008-08-01"}'
curl -s -X POST http://localhost:3000/books \
  -H "Authorization: Bearer ${ADMIN_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d '{"title":"The Pragmatic Programmer","author":"Andrew Hunt","totalPages":352,"publishDate":"1999-10-30"}'

# 3) Public catalog search + pagination + sorting
echo "Search q='the' sorted by publishDate desc, page 1 size 2"
curl -s "http://localhost:3000/books?q=the&sortBy=publishDate&order=desc&page=1&pageSize=2"

# 4) Register and login a normal user (Alice)
curl -s -X POST http://localhost:3000/auth/register \
  -H 'Content-Type: application/json' \
  -d '{"name":"Alice","username":"alice","password":"user123"}'
ALICE_TOKEN=$(curl -s -X POST http://localhost:3000/auth/login \
  -H 'Content-Type: application/json' \
  -d '{"username":"alice","password":"user123"}' | sed -E 's/.*"access_token":"?([^",}]+).*/\1/')
echo "ALICE_TOKEN: ${ALICE_TOKEN}"

# 5) Alice adds books to shelf: want-to-read and in-progress
BOOKS=$(curl -s http://localhost:3000/books)
BOOK1=$(echo "$BOOKS" | sed -nE 's/.*\{"id":([0-9]+),"title":"The Hobbit".*/\1/p' | head -n1)
BOOK2=$(echo "$BOOKS" | sed -nE 's/.*\{"id":([0-9]+),"title":"Clean Code".*/\1/p' | head -n1)
USERS=$(curl -s http://localhost:3000/users)
ALICE_ID=$(echo "$USERS" | sed -nE 's/.*\{"id":([0-9]+),"name":"Alice".*/\1/p' | head -n1)
echo "BOOK1 Hobbit: ${BOOK1} BOOK2 CleanCode: ${BOOK2} ALICE_ID: ${ALICE_ID}"

# want-to-read (status overrides currentPage to 0)
curl -s -X PATCH http://localhost:3000/reading/progress \
  -H "Authorization: Bearer ${ALICE_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d "{\"userId\":${ALICE_ID},\"bookId\":${BOOK1},\"currentPage\":0,\"status\":\"want-to-read\"}"

# in-progress
curl -s -X PATCH http://localhost:3000/reading/progress \
  -H "Authorization: Bearer ${ALICE_TOKEN}" \
  -H 'Content-Type: application/json' \
  -d "{\"userId\":${ALICE_ID},\"bookId\":${BOOK2},\"currentPage\":120}"

# 6) Alice views her shelf: filter by status and sort by progress desc
curl -s -H "Authorization: Bearer ${ALICE_TOKEN}" \
  "http://localhost:3000/reading/shelf?status=in-progress&sortBy=progress&order=desc"

# 7) Book analytics: avgProgress sort and per-book stats
echo "Catalog sorted by avgProgress desc"
curl -s "http://localhost:3000/books?sortBy=avgProgress&order=desc&page=1&pageSize=10"

echo "Stats for The Hobbit"
curl -s "http://localhost:3000/books/${BOOK1}/stats"

# 8) User analytics
USERS=$(curl -s http://localhost:3000/users)
ALICE_ID=$(echo "$USERS" | sed -nE 's/.*\{"id":([0-9]+),"name":"Alice".*/\1/p' | head -n1)
curl -s -H "Authorization: Bearer ${ALICE_TOKEN}" http://localhost:3000/users/${ALICE_ID}/stats
